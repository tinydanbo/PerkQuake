#pragma flag off fastarrays // make dp behave with new fteqcc versions. remove when dp bug with fteqcc fastarrays is fixed

//////////////////////////////////////////////////////////
// sys globals

entity self;

/////////////////////////////////////////////////////////
void		end_sys_globals;
/////////////////////////////////////////////////////////
// sys fields

/////////////////////////////////////////////////////////
void		end_sys_fields;
/////////////////////////////////////////////////////////
// sys functions

void() m_init;
void(float keynr, float ascii) m_keydown;
void() m_draw;
void() m_display; 	// old NG Menu
void() m_toggle;
void() m_hide;		// old NG Menu
void() m_shutdown;

/////////////////////////////////////////////////////////
// sys constants

///////////////////////////
// key dest constants

float KEY_UNKNOWN	= 	-1;
float KEY_GAME 		=	0;
float KEY_MENU		=	2;
float KEY_MENU_GRABBED = 3;

///////////////////////////
// file constants

float FILE_READ = 0;
float FILE_APPEND = 1;
float FILE_WRITE = 2;

///////////////////////////
// logical constants (just for completeness)

float TRUE 	= 1;
float FALSE = 0;

///////////////////////////
// boolean constants

float true  = 1;
float false = 0;

///////////////////////////
// msg constants

float MSG_BROADCAST		= 0;		// unreliable to all
float MSG_ONE			= 1;		// reliable to one (msg_entity)
float MSG_ALL			= 2;		// reliable to all
float MSG_INIT			= 3;		// write to the init string

/////////////////////////////
// mouse target constants

float MT_MENU = 1;
float MT_CLIENT = 2;

/////////////////////////
// client state constants

float CS_DEDICATED 		= 0;
float CS_DISCONNECTED 	= 1;
float CS_CONNECTED		= 2;

///////////////////////////
// blend flags

float DRAWFLAG_NORMAL		= 0;
float DRAWFLAG_ADDITIVE 	= 1;
float DRAWFLAG_MODULATE 	= 2;
float DRAWFLAG_2XMODULATE   = 3;


///////////////////////////
// server list constants

float SLIST_HOSTCACHEVIEWCOUNT  = 0;
float SLIST_HOSTCACHETOTALCOUNT = 1;
float SLIST_MASTERQUERYCOUNT 	= 2;
float SLIST_MASTERREPLYCOUNT 	= 3;
float SLIST_SERVERQUERYCOUNT 	= 4;
float SLIST_SERVERREPLYCOUNT 	= 5;
float SLIST_SORTFIELD		= 6;
float SLIST_SORTDESCENDING	= 7;

float SLIST_LEGACY_LINE1 	= 1024;
float SLIST_LEGACY_LINE2 	= 1025;

float SLIST_TEST_CONTAINS	= 0;
float SLIST_TEST_NOTCONTAIN	= 1;
float SLIST_TEST_LESSEQUAL	= 2;
float SLIST_TEST_LESS		= 3;
float SLIST_TEST_EQUAL		= 4;
float SLIST_TEST_GREATER	= 5;
float SLIST_TEST_GREATEREQUAL	= 6;
float SLIST_TEST_NOTEQUAL	= 7;
float SLIST_TEST_STARTSWITH	= 8;
float SLIST_TEST_NOTSTARTSWITH	= 9;

float SLIST_MASK_AND = 0;
float SLIST_MASK_OR  = 512;

float NET_CURRENTPROTOCOL = 3;

////////////////////////////////
// cinematic action constants

float CINE_PLAY 	= 1;
float CINE_LOOP 	= 2;
float CINE_PAUSE 	= 3;
float CINE_FIRSTFRAME 	= 4;
float CINE_RESETONWAKEUP= 5;

///////////////////////////
// null entity (actually it is the same like the world entity)

entity null_entity;

///////////////////////////
// error constants

// file handling
float ERR_CANNOTOPEN			= -1; // fopen
float ERR_NOTENOUGHFILEHANDLES 	= -2; // fopen
float ERR_INVALIDMODE 			= -3; // fopen
float ERR_BADFILENAME 			= -4; // fopen

// drawing functions

float ERR_NULLSTRING			= -1;
float ERR_BADDRAWFLAG			= -2;
float ERR_BADSCALE			= -3;
//float ERR_BADSIZE			= ERR_BADSCALE;
float ERR_NOTCACHED			= -4;

float GECKO_BUTTON_DOWN 		= 0;
float GECKO_BUTTON_UP 			= 1;
// either use down and up or just press but not all of them!
float GECKO_BUTTON_PRESS 		= 2;
// use this for mouse events if needed?
float GECKO_BUTTON_DOUBLECLICK 	= 3;

/* not supported at the moment
///////////////////////////
// os constants

float OS_WINDOWS	= 0;
float OS_LINUX		= 1;
float OS_MAC		= 2;
*/

float drawfont; // set this to one of the following for draw text routines to work with another font
float FONT_DEFAULT     = 0;
float FONT_CONSOLE     = 1;
float FONT_SBAR        = 2;
float FONT_NOTIFY      = 3;
float FONT_CHAT        = 4;
float FONT_CENTERPRINT = 5;
float FONT_INFOBAR     = 6;
float FONT_MENU        = 7;
float FONT_USER        = 8; // add to this the index, like FONT_USER+3 = user3. At least 8 of them are supported.





///////////////////////////
// key constants

//
// these are the key numbers that should be passed to Key_Event
//
const float K_TAB				=	9;
const float K_ENTER				=	13;
const float K_ESCAPE			=	27;
const float K_SPACE				=	32;

// normal keys should be passed as lowercased ascii

const float K_BACKSPACE			=	127;
const float K_UPARROW			=	128;
const float K_DOWNARROW			=	129;
const float K_LEFTARROW			=	130;
const float K_RIGHTARROW		=	131;

const float K_ALT				=	132;
const float K_CTRL				=	133;
const float K_SHIFT				=	134;
const float K_F1				=	135;
const float K_F2				=	136;
const float K_F3				=	137;
const float K_F4				=	138;
const float K_F5				=	139;
const float K_F6				=	140;
const float K_F7				=	141;
const float K_F8				=	142;
const float K_F9				=	143;
const float K_F10				=	144;
const float K_F11				=	145;
const float K_F12				=	146;
const float K_INS				=	147;
const float K_DEL				=	148;
const float K_PGDN				=	149;
const float K_PGUP				=	150;
const float K_HOME				=	151;
const float K_END				=	152;

const float K_KP_HOME			=	160;
const float K_KP_UPARROW		=	161;
const float K_KP_PGUP			=	162;
const float K_KP_LEFTARROW		=	163;
const float K_KP_5				=	164;
const float K_KP_RIGHTARROW		=	165;
const float K_KP_END			=	166;
const float K_KP_DOWNARROW		=	167;
const float K_KP_PGDN			=	168;
const float K_KP_ENTER			=	169;
const float K_KP_INS   			=	170;
const float K_KP_DEL			=	171;
const float K_KP_SLASH			=	172;
const float K_KP_MINUS			=	173;
const float K_KP_PLUS			=	174;

const float K_PAUSE				=	255;

//
// joystick buttons
//
const float K_JOY1				=	768;
const float K_JOY2				=	769;
const float K_JOY3				=	770;
const float K_JOY4				=	771;

//
// aux keys are for multi-buttoned joysticks to generate so they can use
// the normal binding process
//
const float K_AUX1				=	772;
const float K_AUX2				=	773;
const float K_AUX3				=	774;
const float K_AUX4				=	775;
const float K_AUX5				=	776;
const float K_AUX6				=	777;
const float K_AUX7				=	778;
const float K_AUX8				=	779;
const float K_AUX9				=	780;
const float K_AUX10				=	781;
const float K_AUX11				=	782;
const float K_AUX12				=	783;
const float K_AUX13				=	784;
const float K_AUX14				=	785;
const float K_AUX15				=	786;
const float K_AUX16				=	787;
const float K_AUX17				=	788;
const float K_AUX18				=	789;
const float K_AUX19				=	790;
const float K_AUX20				=	791;
const float K_AUX21				=	792;
const float K_AUX22				=	793;
const float K_AUX23				=	794;
const float K_AUX24				=	795;
const float K_AUX25				=	796;
const float K_AUX26				=	797;
const float K_AUX27				=	798;
const float K_AUX28				=	799;
const float K_AUX29				=	800;
const float K_AUX30				=	801;
const float K_AUX31				=	802;
const float K_AUX32				=	803;

//
// mouse buttons generate virtual keys
//
const float K_MOUSE1			=	512;
const float K_MOUSE2			=	513;
const float K_MOUSE3			=	514;
const float K_MWHEELUP			=	515;
const float K_MWHEELDOWN		=	516;
const float K_MOUSE4			=	517;
const float K_MOUSE5			=	518;
const float K_MOUSE6			=	519;
const float K_MOUSE7			=	520;
const float K_MOUSE8			=	521;
const float K_MOUSE9			=	522;
const float K_MOUSE10			=	523;
const float K_MOUSE11			=	524;
const float K_MOUSE12			=	525;
const float K_MOUSE13			=	526;
const float K_MOUSE14			=	527;
const float K_MOUSE15			=	528;
const float K_MOUSE16			=	529;

//
// behind you: LETTER FLOATS
//
const float K_0					=	48;
const float K_1					=	49;
const float K_2					=	50;
const float K_3					=	51;
const float K_4					=	52;
const float K_5					=	53;
const float K_6					=	54;
const float K_7					=	55;
const float K_8					=	56;
const float K_9					=	57;
const float K_A					=	97;
const float K_B					=	98;
const float K_C					=	99;
const float K_D					=	100;
const float K_E					=	101;
const float K_F					=	102;
const float K_G					=	103;
const float K_H					=	104;
const float K_I					=	105;
const float K_J					=	106;
const float K_K					=	107;
const float K_L					=	108;
const float K_M					=	109;
const float K_N					=	110;
const float K_O					=	111;
const float K_P					=	112;
const float K_Q					=	113;
const float K_R					=	114;
const float K_S					=	115;
const float K_T					=	116;
const float K_U					=	117;
const float K_V					=	118;
const float K_W					=	119;
const float K_X					=	120;
const float K_Y					=	121;
const float K_Z					=	122;

//
// my definition crap
//

float time;							//time since start of engine

string soundonce;					//simple hacky way to make sounds play once

float mhit;					//when you click

float playsound;					//background music

vector vidsize;
vector centerscreen;				//screen size and center of screen
vector mouse_pos;					//mouse position

vector menustart = '20 260 0';

void(vector pos, string txt, float index, vector textsize) selecttext;

void m_hide();

float Menu_Active;					//boolean float that determines if menu is active
float gamemode;						//if deathmatch, it has a value

float menumode;						//which menu to show. menu options below

float NONE = -1;
float OFFLINEMENU = 0;
	float SELECTDIFFICULTY = 0.1;
	float LOADGAME = 0.2;
float INGAMEMENU = 1;
	float SAVEGAME = 1.1;